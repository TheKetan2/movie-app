{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","image","title","text","style","background","SearchBar","state","value","timeout","doSearch","event","callback","props","setState","target","clearTimeout","setTimeout","this","name","size","type","placeholder","onChange","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","movieId","movieName","clickable","pathname","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","sessionStorage","setItem","JSON","stringify","catch","error","console","getItem","parse","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","directors","min","max","optimum","low","high","vote_average","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","Actor","actor","profile_path","character","Movie","actors","match","params","status_code","crew","filter","member","job","cast","localStorage","location","runtime","NotFound","App","basename","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f7ea9e9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst Header = () => (\n  <div className=\"rmdb-header\">\n    <div className=\"rmdb-header-content\">\n      <Link to=\"/\">\n        <img\n          className=\"rmdb-logo\"\n          src=\"https://raw.githubusercontent.com/TheKetan2/movie-app/master/public/images/reactMovie_logo.png\"\n          alt=\"rmdb-logo\"\n        />\n      </Link>\n      <img\n        className=\"rmdb-tmdb-logo\"\n        src=\"https://raw.githubusercontent.com/TheKetan2/movie-app/master/public/images/tmdb_logo.png\"\n        alt=\"tmdb-logo\"\n      />\n    </div>\n  </div>\n);\n\nexport default Header;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n\n\n// 019e8f375549e0bbd4a4191862ebc88f\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280'\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500'\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => (\n  <div className=\"rmdb-heroimage\"\n    style={{\n      background:\n        `linear-gradient(to bottom, rgba(0,0,0,0)\n        39%,rgba(0,0,0,0)\n        41%,rgba(0,0,0,0.65)\n        100%),\n        url('${image}'), #1c1c1c`\n    }}\n  >\n    <div className=\"rmdb-heroimage-content\">\n      <div className=\"rmdb-heroimage-text\">\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </div>\n)\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string\n}\n\nexport default HeroImage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  }\n  // Must have this here so we can reset it\n  timeout = null;\n\n  doSearch = (event) => {\n    // ES6 Destructuring prop\n    const { callback } = this.props;\n\n    this.setState({ value: event.target.value })\n    clearTimeout(this.timeout);\n    // Set a timeout to wait for the user to stop writing\n    // So we don´t have to make unnessesary calls\n    this.timeout = setTimeout( () => {\n      callback(this.state.value);\n    }, 500);\n  }\n\n  render () {\n    // ES6 Destructuring state\n    const { value } = this.state;\n\n    return (\n      <div className=\"rmdb-searchbar\">\n        <div className=\"rmdb-searchbar-content\">\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n          <input\n            type=\"text\"\n            className=\"rmdb-searchbar-input\"\n            placeholder=\"Search\"\n            onChange={this.doSearch}\n            value={value}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func\n}\n\nexport default SearchBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = ({ header, loading, children }) => {\n\n  const renderElements = () => {\n    const gridElements = children.map( (element, i) => (\n      <div key={i} className=\"rmdb-grid-element\">\n        {element}\n      </div>\n    ))\n    return gridElements;\n  }\n\n  return (\n    <div className=\"rmdb-grid\">\n      {header && !loading ? <h1>{header}</h1> : null}\n      <div className=\"rmdb-grid-content\">\n         {renderElements()}\n      </div>\n    </div>\n  )\n}\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool\n}\n\nexport default FourColGrid;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => (\n  <div className=\"rmdb-moviethumb\">\n    {/* You can send props via the Links \"to\" object. Here we create our own \"movieName\" */}\n    {clickable ?\n      <Link to={{ pathname: `/${movieId}`,  movieName: `${movieName}`}}>\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n      </Link>\n      :\n      <img src={image} alt=\"moviethumb\" />\n    }\n  </div>\n)\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string,\n  clickable: PropTypes.bool\n}\n\nexport default MovieThumb;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className=\"rmdb-loadmorebtn\" onClick={onClick}>\n    <p>{text}</p>\n  </div>\n)\n\nLoadMoreBtn.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func\n}\n\nexport default LoadMoreBtn;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n  <div className=\"loader\"></div>\n)\n\nexport default Spinner;","import React, { Component } from \"react\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE\n} from \"../../config\";\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Home.css\";\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: \"\"\n  };\n\n  componentDidMount() {\n    if (sessionStorage.getItem(\"HomeState\")) {\n      let state = JSON.parse(sessionStorage.getItem(\"HomeState\"));\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  searchItems = searchTerm => {\n    let endpoint = \"\";\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  loadMoreItems = () => {\n    // ES6 Destructuring the state\n    const { searchTerm, currentPage } = this.state;\n\n    let endpoint = \"\";\n    this.setState({ loading: true });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage +\n        1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage +\n        1}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  fetchItems = endpoint => {\n    // ES6 Destructuring the state\n    const { movies, heroImage, searchTerm } = this.state;\n\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        this.setState(\n          {\n            movies: [...movies, ...result.results],\n            heroImage: heroImage || result.results[0],\n            loading: false,\n            currentPage: result.page,\n            totalPages: result.total_pages\n          },\n          () => {\n            // Remember state for the next mount if we´re not in a search view\n            if (searchTerm === \"\") {\n              sessionStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n            }\n          }\n        );\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n\n  render() {\n    // ES6 Destructuring the state\n    const {\n      movies,\n      heroImage,\n      loading,\n      currentPage,\n      totalPages,\n      searchTerm\n    } = this.state;\n\n    return (\n      <div className=\"rmdb-home\">\n        {heroImage ? (\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n              title={heroImage.original_title}\n              text={heroImage.overview}\n            />\n            <SearchBar callback={this.searchItems} />\n          </div>\n        ) : null}\n        <div className=\"rmdb-home-grid\">\n          <FourColGrid\n            header={searchTerm ? \"Search Result\" : \"Popular Movies\"}\n            loading={loading}\n          >\n            {movies.map((element, i) => (\n              <MovieThumb\n                key={i}\n                clickable={true}\n                image={\n                  element.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\n                    : \"https://raw.githubusercontent.com/TheKetan2/movie-app/master/public/images/no_image.jpg\"\n                }\n                movieId={element.id}\n                movieName={element.original_title}\n              />\n            ))}\n          </FourColGrid>\n          {loading ? <Spinner /> : null}\n          {currentPage <= totalPages && !loading ? (\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Navigation.css';\n\nconst Navigation = ({ movie }) => (\n  <div className=\"rmdb-navigation\">\n    <div className=\"rmdb-navigation-content\">\n      <Link to=\"/\">\n        <p>Home</p>\n      </Link>\n      <p>/</p>\n      <p>{movie}</p>\n    </div>\n  </div>\n)\n\nNavigation.propTypes = {\n  movie: PropTypes.string\n}\n\nexport default Navigation;","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = ({ movie, directors }) => (\n  <div className=\"rmdb-movieinfo\"\n    style={{\n      background: movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')` : '#000'\n    }}\n  >\n    <div className=\"rmdb-movieinfo-content\">\n      <div className=\"rmdb-movieinfo-thumb\">\n        <MovieThumb\n          image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : './images/no_image.jpg'}\n          clickable={false}\n        />\n      </div>\n      <div className=\"rmdb-movieinfo-text\">\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n        <h3>IMDB RATING</h3>\n        <div className=\"rmdb-rating\">\n          <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={ movie.vote_average * 10}></meter>\n          <p className=\"rmdb-score\">{movie.vote_average}</p>\n        </div>\n        {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n        {directors.map( (element, i) => {\n          return <p key={i} className=\"rmdb-director\">{element.name}</p>\n        })}\n      </div>\n      <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n    </div>\n  </div>\n)\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  directors: PropTypes.array\n}\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FontAwesome from \"react-fontawesome\";\nimport { calcTime, convertMoney } from \"../../../helpers.js\";\nimport \"./MovieInfoBar.css\";\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <div className=\"rmdb-movieinfobar\">\n    <div className=\"rmdb-movieinfobar-content\">\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">\n          Running time: {calcTime(time)}\n        </span>\n      </div>\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">\n          Budget: {convertMoney(budget)}\n        </span>\n      </div>\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\nMovieInfoBar.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number\n};\n\nexport default MovieInfoBar;\n","import React from \"react\";\nimport { IMAGE_BASE_URL } from \"../../../config\";\nimport PropTypes from \"prop-types\";\nimport \"./Actor.css\";\n\nconst Actor = ({ actor }) => {\n  const POSTER_SIZE = \"w154\";\n\n  return (\n    <div className=\"rmdb-actor\">\n      <img\n        src={\n          actor.profile_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n            : \"https://raw.githubusercontent.com/TheKetan2/movie-app/master/public/images/no_image.jpg\"\n        }\n        alt=\"actorthumb\"\n      />\n      <span className=\"rmdb-actor-name\">{actor.name}</span>\n      <span className=\"rmdb-actor-character\">{actor.character}</span>\n    </div>\n  );\n};\n\nActor.propTypes = {\n  actor: PropTypes.object\n};\n\nexport default Actor;\n","import React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport Navigation from \"../elements/Navigation/Navigation\";\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid.js\";\nimport Actor from \"../elements/Actor/Actor\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Movie.css\";\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    if (localStorage.getItem(`${movieId}`)) {\n      let state = JSON.parse(localStorage.getItem(`${movieId}`));\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      // First fetch the movie ...\n      let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems = endpoint => {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        if (result.status_code) {\n          // If we don't find any movie\n          this.setState({ loading: false });\n        } else {\n          this.setState({ movie: result }, () => {\n            // ... then fetch actors in the setState callback function\n            let endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n            fetch(endpoint)\n              .then(result => result.json())\n              .then(result => {\n                const directors = result.crew.filter(\n                  member => member.job === \"Director\"\n                );\n\n                this.setState(\n                  {\n                    actors: result.cast,\n                    directors,\n                    loading: false\n                  },\n                  () => {\n                    localStorage.setItem(\n                      `${movieId}`,\n                      JSON.stringify(this.state)\n                    );\n                  }\n                );\n              });\n          });\n        }\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n\n  render() {\n    // ES6 Destructuring the props and state\n    const { movieName } = this.props.location;\n    const { movie, directors, actors, loading } = this.state;\n\n    return (\n      <div className=\"rmdb-movie\">\n        {movie ? (\n          <div>\n            <Navigation movie={movieName} />\n            <MovieInfo movie={movie} directors={directors} />\n            <MovieInfoBar\n              time={movie.runtime}\n              budget={movie.budget}\n              revenue={movie.revenue}\n            />\n          </div>\n        ) : null}\n        {actors ? (\n          <div className=\"rmdb-movie-grid\">\n            <FourColGrid header={\"Actors\"}>\n              {actors.map((element, i) => (\n                <Actor key={i} actor={element} />\n              ))}\n            </FourColGrid>\n          </div>\n        ) : null}\n        {!actors && !loading ? <h1>No movie found</h1> : null}\n        {loading ? <Spinner /> : null}\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h1>Whooops. This page doesn't exist</h1>\n  </div>\n)\n\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"../elements/Header/Header\";\nimport Home from \"../Home/Home\";\nimport Movie from \"../Movie/Movie\";\nimport NotFound from \"../elements/NotFound/NotFound\";\n\nconst App = () => (\n  <BrowserRouter basename=\"/movie-app/\">\n    <React.Fragment>\n      <Header />\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/:movieId\" component={Movie} exact />\n        <Route component={NotFound} />\n      </Switch>\n    </React.Fragment>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}